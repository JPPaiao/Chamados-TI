generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String       @id @default(uuid()) 
  username      String
  email         String
  password      String
  permissions   UserPermission[]
  roles         UserRole[]

  @@map("Users")
}

model Permissions {
  id          String       @id @default(uuid()) 
  name        String
  description String
  users       UserPermission[]
  roles       RolePermission[]

  @@map("Permissions")
}

model Roles {
  id          String       @id @default(uuid()) 
  name        String
  description String
  users       UserRole[]
  permissions RolePermission[]

  @@map("Roles")
}

model Procedures {
  id          Int       @id @default(autoincrement()) 
  title       String
  description String
  author      String
  sector      String
  pdfName     String
  pdfId       String
  URL         String

  @@map("Procedures")
}

// Tabelas intermediárias para relações many-to-many

model UserPermission {
  userId        String      
  permissionId  String  
  user          Users       @relation(fields: [userId], references: [id])
  permission    Permissions @relation(fields: [permissionId], references: [id])

  @@id([userId, permissionId])
  @@index([userId])
  @@index([permissionId])
}

model UserRole {
  userId   String 
  roleId   String 
  user     Users  @relation(fields: [userId], references: [id])
  role     Roles  @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
  @@index([userId])
  @@index([roleId])
}

model RolePermission {
  roleId        String      
  permissionId  String     
  role          Roles       @relation(fields: [roleId], references: [id])
  permission    Permissions @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@index([roleId])
  @@index([permissionId])
}