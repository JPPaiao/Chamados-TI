// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Customer {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  username   String
  email      String
  password   String
  status     Boolean
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("Customers")
}

model Users {
  id            String              @id @default(auto()) @map("_id") @db.ObjectId
  username      String
  email         String
  password      String
  permission_id String[]            @db.ObjectId
  permissions   Permissions[]       @relation(fields: [permission_id], references: [id])  
  role_id       String[]            @db.ObjectId
  roles         Roles[]             @relation(fields: [role_id], references: [id])

  @@map("Users")
}

model Permissions {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String
  user_id           String[]            @db.ObjectId
  user              Users[]             @relation(fields: [user_id], references: [id])
  role_id           String[]            @db.ObjectId
  roles             Roles[]             @relation(fields: [role_id], references: [id])

  @@map("Permissions")
}

model Roles {
  id                  String            @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  description         String
  user_id             String[]          @db.ObjectId
  user                Users[]           @relation(fields: [user_id], references: [id])
  permission_id       String[]          @db.ObjectId
  permissions         Permissions[]     @relation(fields: [permission_id], references: [id])  

  @@map("Roles")
}

model Procedures {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  author      String
  sector      String
  pdfId       String? @unique @map("_pdfId") @db.ObjectId
  pdf         Pdf?    @relation(fields: [pdfId], references: [id])

  @@map("Procedures")
}

model Pdf {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  content   Bytes
  procedure Procedures?

  @@map("Pdf")
}
