generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model permissions {
  id              String  @id @default(uuid()) @db.VarChar(36)
  name            String  @db.VarChar(255)
  description     String? @db.VarChar(255)
  roles           rolepermission[]
  users           userpermission[]

  @@map("permissions")
}

model procedures {
  id          Int     @id @default(autoincrement())
  title       String  @db.VarChar(255)
  description String? @db.VarChar(255)
  author      String? @db.VarChar(255)
  sector      String? @db.VarChar(255)
  pdfName     String? @db.VarChar(255)
  pdfId       String? @db.VarChar(255)
  URL         String? @db.VarChar(255)

  @@map("procedures")
}

model roles {
  id          String  @id @default(uuid()) @db.VarChar(36)
  name        String  @db.VarChar(255)
  description String? @db.VarChar(255)
  permissions rolepermission[]
  roles       userrole[]

  @@map("roles")
}

model sectors {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  users users[]

  @@map("sectors")
}

model users {
  id              String @id @default(uuid()) @db.VarChar(36)
  username        String @db.VarChar(255)
  email           String @db.VarChar(255)
  password        String @db.VarChar(255)
  sectorId        Int?
  permissions     userpermission[]
  roles           userrole[]
  sector          sectors?         @relation(fields: [sectorId], references: [id])

  @@index([sectorId], map: "sectorId")
  @@map("users")
}

model rolepermission {
  roleId       String @db.VarChar(36)
  permissionId String @db.VarChar(36)
  permissions  permissions @relation(fields: [permissionId], references: [id])
  roles        roles       @relation(fields: [roleId], references: [id])

  @@id([roleId, permissionId])
  @@index([permissionId], map: "permissionId")
  @@map("rolepermission")
}

model userpermission {
  userId       String @db.VarChar(36)
  permissionId String @db.VarChar(36)
  permissions  permissions @relation(fields: [permissionId], references: [id])
  users        users       @relation(fields: [userId], references: [id])

  @@id([userId, permissionId])
  @@index([permissionId], map: "permissionId")
  @@map("userpermission")
}

model userrole {
  userId String @db.VarChar(36)
  roleId String @db.VarChar(36)
  roles  roles  @relation(fields: [roleId], references: [id])
  users  users  @relation(fields: [userId], references: [id])

  @@id([userId, roleId])
  @@index([roleId], map: "roleId")
  @@map("userrole")
}
