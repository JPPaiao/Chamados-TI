// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Customer {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  username   String
  email      String
  password   String
  status     Boolean
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("Customers")
}

model Users {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  username    String
  email       String
  password    String
  permissions Users_permissions[]
  roles       Users_roles[]

  @@map("Users")
}

model Users_permissions {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  permission_id String      @map("_permission_id") @db.ObjectId
  user_id       String      @map("_user_id") @db.ObjectId
  user          Users       @relation(fields: [user_id], references: [id])
  permission    Permissions @relation(fields: [permission_id], references: [id])

  @@map("Users_Permissions")
}

model Users_roles {
  id      String            @id @default(auto()) @map("_id") @db.ObjectId
  role_id String?           @db.ObjectId
  user_id String?           @db.ObjectId
  Roles   Roles?            @relation(fields: [role_id], references: [id])
  Users   Users?            @relation(fields: [user_id], references: [id])

  @@map("Users_roles")
}

model Permissions {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String
  roles             Permissions_roles[]
  Users_permissions Users_permissions[]

  @@map("Permissions")
}

model Permissions_roles {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  role_id       String       @db.ObjectId
  permission_id String       @db.ObjectId
  Roles         Roles?       @relation(fields: [role_id], references: [id])
  Permissions   Permissions? @relation(fields: [permission_id], references: [id])

  @@map("Permissions_role")
}

model Roles {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  users       Users_roles[]
  permissions Permissions_roles[]

  @@map("Roles")
}

model Procedures {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  author      String
  sector      String
  pdfId       String? @unique @map("_pdfId") @db.ObjectId
  pdf         Pdf?    @relation(fields: [pdfId], references: [id])

  @@map("Procedures")
}

model Pdf {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  content   Bytes
  procedure Procedures?

  @@map("Pdf")
}
